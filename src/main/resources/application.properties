server.port=9001
spring.application.name=catalog-service

# The default profile is used to configure the application when running, if config server is not available then the local application.properties is used
spring.config.import=optional:configserver:

# Spring Cloud Config Server properties

# The url of the config server, e.g. http://localhost:8888
spring.cloud.config.uri=http://localhost:8888
spring.cloud.config.request-connect-timeout=5000
spring.cloud.config.request-read-timeout=5000

# Makes a failure to connect to the config server fatal, in production set to true
spring.cloud.config.fail-fast=false


# Retry properties
spring.cloud.config.retry.max-attempts=6
spring.cloud.config.retry.initial-interval=1000
spring.cloud.config.retry.max-interval=2000
# Multiplier to compute the next interval
spring.cloud.config.retry.multiplier=1.1


# Management properties
management.endpoints.web.exposure.include=refresh

# PostgreSQL properties
spring.datasource.url=jdbc:postgresql://localhost:5433/polardb_catalog
spring.datasource.username=polardb
spring.datasource.password=test1234
spring.datasource.hikari.connection-timeout=2000
spring.datasource.hikari.maximum-pool-size=5

spring.jpa.hibernate.ddl-auto=create

spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=src/main/resources/db/migration/schema.sql



polar.greeting=Welcome to the local catalog service 